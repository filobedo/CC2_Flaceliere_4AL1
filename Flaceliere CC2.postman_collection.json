{
	"info": {
		"_postman_id": "a66de52e-fb0e-4aa9-b1a6-84e6d1e54544",
		"name": "Flaceliere CC2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"test body return\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"insert ok\");",
							"});",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"var schema = {",
							"\t\"definitions\": {},",
							"\t\"$schema\": \"http://json-schema.org/draft-07/schema#\", ",
							"\t\"$id\": \"https://example.com/object1641487059.json\", ",
							"\t\"title\": \"Root\", ",
							"\t\"type\": \"object\",",
							"\t\"required\": [",
							"\t\t\"message\"",
							"\t],",
							"\t\"properties\": {",
							"\t\t\"message\": {",
							"\t\t\t\"$id\": \"#root/message\", ",
							"\t\t\t\"title\": \"Message\", ",
							"\t\t\t\"type\": \"string\",",
							"\t\t\t\"default\": \"\",",
							"\t\t\t\"examples\": [",
							"\t\t\t\t\"insert ok\"",
							"\t\t\t],",
							"\t\t\t\"pattern\": \"^.*$\"",
							"\t\t}",
							"\t}",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "localhost:8080/user",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "get all user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/user",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "get one user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/user/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send bad id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/user/2",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"user",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "get Best Tradesman",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"experienceyear\": 5,\r\n  \"country\": \"france\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/besttradesman",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"besttradesman"
					]
				}
			},
			"response": []
		},
		{
			"name": "assign Tradesman to Project",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"trademanid\":1,\r\n  \"projectid\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/projectassign",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"projectassign"
					]
				}
			},
			"response": []
		},
		{
			"name": "endProject",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"projectid\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/closeproject",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"closeproject"
					]
				}
			},
			"response": []
		},
		{
			"name": "getAllProjects",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/projects",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"projects"
					]
				}
			},
			"response": []
		}
	]
}